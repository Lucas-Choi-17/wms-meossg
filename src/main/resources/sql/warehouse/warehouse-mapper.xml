<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meossg.warehouse.model.mapper.WarehouseMapper">

    <select id="getUser" resultType="WhAdminDTO">
        SELECT
               ID,
               NAME,
               ASSOCIATION,
               PASSWORD
          FROM ADMIN
         WHERE ID = #{ id }
           AND ASSOCIATION = '창고'
    </select>

    <select id="selectAllOrderList" resultType="OrderListDTO">
        SELECT
               OL.ORDER_ID,
               (SELECT NAME FROM PRODUCT WHERE ID = OL.PRODUCT_ID) AS NAME,
               OL.COUNT
          FROM ORDER_LIST OL
         WHERE ORDER_ID IN (
                            SELECT ID
                              FROM MEMBER_ORDER
                             WHERE ORDER_APPROVEYN = 'Y'
                               AND DELIVERYN = 'N'
                           )
         ORDER BY ORDER_ID
    </select>

    <select id="selectOrder" resultType="MemberOrderDTO">
        SELECT
               ID,
               MEMBER_ID,
               ORDER_APPROVEYN,
               DELIVERYN
          FROM MEMBER_ORDER
         WHERE ID = #{ id }
           AND ORDER_APPROVEYN = 'Y'
    </select>

    <select id="verifyStock" resultType="_int">
        SELECT COUNT(*) AS verif
        FROM (SELECT a.COUNT - b.COUNT AS verif
        FROM ORDER_LIST a
        JOIN STOCK b
        ON a.PRODUCT_ID = b.PRODUCT_ID
        WHERE a.ORDER_ID = #{ id }
        HAVING verif &lt;= 0) AS vf
        GROUP BY verif
    </select>

    <insert id="insertOutWarehouse">
        INSERT INTO OUTWAREHOUSE
        (
            ORDER_NUMBER,
            PRODUCT_ID,
            OUT_DATE,
            ADDRESS
        )
        SELECT OL.ORDER_ID,
            OL.PRODUCT_ID,
            SYSDATE(),
            MB.ADDRESS
        FROM ORDER_LIST OL
        JOIN MEMBER_ORDER MO ON OL.ORDER_ID = MO.id
        JOIN MEMBER MB ON MO.MEMBER_ID = MB.id
        WHERE OL.ORDER_ID = #{ id }
    </insert>

    <update id="updateDeliveryn">
        UPDATE MEMBER_ORDER
        SET DELIVERYN = 'Y'
        WHERE ID = #{ id }
    </update>

    <update id="updateTblDelivery">
        WITH max_tracking AS (
        SELECT MAX(TRACKING_NUMBER) AS max_tracking_number
        FROM DELIVERY
        )
        UPDATE DELIVERY
        JOIN max_tracking
        SET STATUS = 'Y',
        TRACKING_NUMBER = max_tracking.max_tracking_number + 1
        WHERE ORDER_ID = #{id};
    </update>

    <update id="updateStock">
        UPDATE STOCK S, ORDER_LIST OL SET
            S.COUNT = S.COUNT - OL.COUNT
         WHERE OL.ORDER_ID = #{ id }
           AND S.PRODUCT_ID = OL.PRODUCT_ID
    </update>

    <select id="selectAllPlacingOrder" resultType="PlacingOrderDTO">
        SELECT
               PO.ID,
               (SELECT NAME FROM PRODUCT P WHERE P.ID = PO.ID) AS NAME,
               PO.COUNT,
               PO.ORDER_DATE,
               IF(PO.INWAREHOUSEYN = 'Y','입고완료','입고전') AS INWAREHOUSEYN
        FROM PLACING_ORDER PO
    </select>

    <select id="selectAllOutwarehouse" resultType="OutwarehouseDTO">
        SELECT OW.ID,
               OW.ORDER_NUMBER,
               (SELECT NAME FROM PRODUCT P WHERE P.ID = OW.PRODUCT_ID) AS NAME,
               OW.OUT_DATE,
               OW.ADDRESS
          FROM OUTWAREHOUSE OW
    </select>

    <select id="selectStockByName" resultType="WhStockDTO">
        SELECT
               P.NAME,
               S.COUNT
        FROM STOCK S
        JOIN PRODUCT P ON S.PRODUCT_ID = P.ID
        WHERE P.NAME like CONCAT('%',#{ name },'%')
    </select>

    <select id="selectAllStock" resultType="WhStockDTO">
        SELECT
               P.NAME,
               S.COUNT
        FROM STOCK S
        JOIN PRODUCT P ON S.PRODUCT_ID = P.ID
    </select>

    <select id="verifyPlacingOrder" resultType="_int">
        SELECT ID FROM PLACING_ORDER WHERE ID = #{ id }
    </select>

    <update id="updateInwarehouseYn">
        UPDATE PLACING_ORDER SET
        INWAREHOUSEYN = 'Y'
        WHERE ID = #{ id }
    </update>

    <update id="updateStockCount">
        UPDATE STOCK S, PLACING_ORDER PO SET
        S.COUNT = S.COUNT + PO.COUNT
        WHERE S.PRODUCT_ID = PO.PRODUCT_ID
          AND PO.ID = #{ id }
    </update>

    <insert id="insertInWarehouse">
        INSERT INTO INWAREHOUSE (
        PRODUCT_ID,
        IN_DATE
        )
        VALUES
        (
        (SELECT PRODUCT_ID FROM PLACING_ORDER WHERE ID = #{ id }),
        SYSDATE()
        )
    </insert>

    <select id="getAllInWarehouseList" resultType="InWarehouseDTO">
                SELECT
                I.ID 'id',
                I.PRODUCT_ID 'productId',
                I.IN_DATE 'InDate'
                FROM
                INWAREHOUSE I
    </select>
</mapper>