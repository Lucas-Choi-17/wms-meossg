<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meossg.mall.model.dao.ProductMapper">

    <insert id="addProduct" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        PRODUCT
        VALUES (
        null, #{name}, #{price}, #{size}, #{color}, #{availability}
        )
    </insert>

    <update id="modifyProduct">
        UPDATE
        PRODUCT
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">
                NAME = #{name},
            </if>
            <if test="price != null and price gt 0">
                PRICE = #{price},
            </if>
            <if test="size != null and size != ''">
                SIZE = #{size},
            </if>
            <if test="color != null and color != ''">
                COLOR = #{color},
            </if>
            <if test="availability != null and availability != ''">
                AVAILABILITY = #{availability}
            </if>
        </trim>
        where
        id = #{id}
    </update>

    <select id="isPlacingOrderNull" resultType="MallPlacingOrderDTO" parameterType="_int">
        SELECT *
        FROM PLACING_ORDER
        WHERE ID = #{ mallPlacingOrderId }
    </select>

    <select id="checkProductExists" resultType="ProductDTO">
        SELECT
        *
        FROM PRODUCT
        WHERE ID = #{ id }
    </select>

    <insert id="placingOrder" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        PLACING_ORDER (PRODUCT_ID, COUNT, ORDER_DATE, INWAREHOUSEYN)
        VALUES (
        #{id}, #{count}, NOW(), 'N'
        )
    </insert>

    <select id="getAllStockList" resultType="StockDTO">
        SELECT
        P.ID 'id',
        P.NAME 'name',
        if(S.COUNT IS NULL, 0, S.COUNT) 'count'
        FROM
        PRODUCT P
        LEFT JOIN STOCK S
        ON
        P.ID = S.PRODUCT_ID;
    </select>

    <select id="selectAllProducts" resultType="ProductDTO">
        SELECT
            A.ID,
            A.NAME,
            A.PRICE,
            A.SIZE,
            A.COLOR,
            A.AVAILABILITY
        FROM PRODUCT A
    </select>

    <select id="selectAllPlacingOrder" resultType="MallPlacingOrderDTO">
        SELECT * FROM PLACING_ORDER
    </select>

    <delete id="deletePlacingOrder" parameterType="MallPlacingOrderDTO">
        DELETE FROM PLACING_ORDER WHERE ID = #{ id };

        ALTER TABLE PLACING_ORDER AUTO_INCREMENT=1;
        SET @COUNT = 0;
        UPDATE PLACING_ORDER SET ID = @COUNT:=@COUNT+1;
    </delete>

    <select id="salesTotalSalesRate" resultType="SalesRateDTO">
        SELECT A.ID productId,
        A.NAME productName,
        SUM(B.COUNT) salesCount
        FROM PRODUCT A
        JOIN ORDER_LIST B
        ON A.ID = B.PRODUCT_ID
        JOIN DELIVERY C
        ON B.ORDER_ID = C.ORDER_ID
        JOIN MEMBER_ORDER D
        ON B.ORDER_ID = D.ID
        WHERE D.ORDER_APPROVEYN = 'Y'
        GROUP BY A.ID;
    </select>

    <select id="selectSalesRateByProduct" resultType="SalesRateDTO" parameterType="hashmap">
        SELECT A.ID productId,
        A.NAME productName,
        SUM(B.COUNT) salesCount
        FROM PRODUCT A
        JOIN ORDER_LIST B
        ON A.ID = B.PRODUCT_ID
        JOIN DELIVERY C
        ON B.ORDER_ID = C.ORDER_ID
        JOIN MEMBER_ORDER D
        ON B.ORDER_ID = D.ID
        WHERE D.ORDER_APPROVEYN = 'Y'
            AND
              A.NAME = #{ productName }
        GROUP BY A.ID;
    </select>

    <select id="profitOfEachProduct" resultType="ProductDTO">
        SELECT P.ID, P.NAME, IFNULL(J.COUNT, 0)*P.PRICE AS 'PRICE' FROM PRODUCT P
        LEFT JOIN(SELECT OL.PRODUCT_ID, SUM(OL.COUNT) 'COUNT'
        FROM MEMBER_ORDER MO
        LEFT JOIN ORDER_LIST OL
        ON MO.ID = OL.ORDER_ID
        WHERE MO.DELIVERYN='Y' GROUP BY OL.PRODUCT_ID) J ON P.ID = J.PRODUCT_ID;
    </select>
</mapper>